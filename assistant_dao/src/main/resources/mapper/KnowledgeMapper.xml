<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fzu.pa.dao.mapper.KnowledgeMapper" >
  <resultMap id="BaseResultMap" type="com.fzu.pa.dao.domain.KnowledgeDO" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modify" property="gmtModify" jdbcType="TIMESTAMP" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="open_level" property="openLevel" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.fzu.pa.dao.domain.KnowledgeDO" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, gmt_create, gmt_modify, title, user_id, open_level
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.fzu.pa.dao.domain.KnowledgeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fzu.pa.dao.domain.KnowledgeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.fzu.pa.dao.domain.KnowledgeExample" >
    delete from knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fzu.pa.dao.domain.KnowledgeDO" >
    insert into knowledge (id, gmt_create, gmt_modify, title, user_id, open_level, content
      )
    values (#{id}, #{gmtCreate}, #{gmtModify}, #{title}, #{userId}, #{openLevel}, #{content}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fzu.pa.dao.domain.KnowledgeDO" >
    insert into knowledge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModify != null" >
        gmt_modify,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="openLevel != null" >
        open_level,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate},
      </if>
      <if test="gmtModify != null" >
        #{gmtModify},
      </if>
      <if test="title != null" >
        #{title},
      </if>
      <if test="userId != null" >
        #{userId},
      </if>
      <if test="openLevel != null" >
        #{openLevel},
      </if>
      <if test="content != null" >
        #{content},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fzu.pa.dao.domain.KnowledgeExample" resultType="java.lang.Integer" >
    select count(*) from knowledge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update knowledge
    <set >
      <if test="record.id != null" >
        id = #{record.id},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate},
      </if>
      <if test="record.gmtModify != null" >
        gmt_modify = #{record.gmtModify},
      </if>
      <if test="record.title != null" >
        title = #{record.title},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId},
      </if>
      <if test="record.openLevel != null" >
        open_level = #{record.openLevel},
      </if>
      <if test="record.content != null" >
        content = #{record.content},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update knowledge
    set id = #{record.id},
      gmt_create = #{record.gmtCreate},
      gmt_modify = #{record.gmtModify},
      title = #{record.title},
      user_id = #{record.userId},
      open_level = #{record.openLevel},
      content = #{record.content}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update knowledge
    set id = #{record.id},
      gmt_create = #{record.gmtCreate},
      gmt_modify = #{record.gmtModify},
      title = #{record.title},
      user_id = #{record.userId},
      open_level = #{record.openLevel}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>