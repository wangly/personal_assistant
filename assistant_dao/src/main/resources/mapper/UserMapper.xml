<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fzu.pa.dao.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.fzu.pa.dao.domain.UserDO" >
    <result column="Host" property="host" jdbcType="CHAR" />
    <result column="User" property="user" jdbcType="CHAR" />
    <result column="Select_priv" property="selectPriv" jdbcType="CHAR" />
    <result column="Insert_priv" property="insertPriv" jdbcType="CHAR" />
    <result column="Update_priv" property="updatePriv" jdbcType="CHAR" />
    <result column="Delete_priv" property="deletePriv" jdbcType="CHAR" />
    <result column="Create_priv" property="createPriv" jdbcType="CHAR" />
    <result column="Drop_priv" property="dropPriv" jdbcType="CHAR" />
    <result column="Reload_priv" property="reloadPriv" jdbcType="CHAR" />
    <result column="Shutdown_priv" property="shutdownPriv" jdbcType="CHAR" />
    <result column="Process_priv" property="processPriv" jdbcType="CHAR" />
    <result column="File_priv" property="filePriv" jdbcType="CHAR" />
    <result column="Grant_priv" property="grantPriv" jdbcType="CHAR" />
    <result column="References_priv" property="referencesPriv" jdbcType="CHAR" />
    <result column="Index_priv" property="indexPriv" jdbcType="CHAR" />
    <result column="Alter_priv" property="alterPriv" jdbcType="CHAR" />
    <result column="Show_db_priv" property="showDbPriv" jdbcType="CHAR" />
    <result column="Super_priv" property="superPriv" jdbcType="CHAR" />
    <result column="Create_tmp_table_priv" property="createTmpTablePriv" jdbcType="CHAR" />
    <result column="Lock_tables_priv" property="lockTablesPriv" jdbcType="CHAR" />
    <result column="Execute_priv" property="executePriv" jdbcType="CHAR" />
    <result column="Repl_slave_priv" property="replSlavePriv" jdbcType="CHAR" />
    <result column="Repl_client_priv" property="replClientPriv" jdbcType="CHAR" />
    <result column="Create_view_priv" property="createViewPriv" jdbcType="CHAR" />
    <result column="Show_view_priv" property="showViewPriv" jdbcType="CHAR" />
    <result column="Create_routine_priv" property="createRoutinePriv" jdbcType="CHAR" />
    <result column="Alter_routine_priv" property="alterRoutinePriv" jdbcType="CHAR" />
    <result column="Create_user_priv" property="createUserPriv" jdbcType="CHAR" />
    <result column="Event_priv" property="eventPriv" jdbcType="CHAR" />
    <result column="Trigger_priv" property="triggerPriv" jdbcType="CHAR" />
    <result column="Create_tablespace_priv" property="createTablespacePriv" jdbcType="CHAR" />
    <result column="ssl_type" property="sslType" jdbcType="CHAR" />
    <result column="max_questions" property="maxQuestions" jdbcType="INTEGER" />
    <result column="max_updates" property="maxUpdates" jdbcType="INTEGER" />
    <result column="max_connections" property="maxConnections" jdbcType="INTEGER" />
    <result column="max_user_connections" property="maxUserConnections" jdbcType="INTEGER" />
    <result column="plugin" property="plugin" jdbcType="CHAR" />
    <result column="password_expired" property="passwordExpired" jdbcType="CHAR" />
    <result column="password_last_changed" property="passwordLastChanged" jdbcType="TIMESTAMP" />
    <result column="password_lifetime" property="passwordLifetime" jdbcType="SMALLINT" />
    <result column="account_locked" property="accountLocked" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.fzu.pa.dao.domain.UserDO" extends="BaseResultMap" >
    <result column="ssl_cipher" property="sslCipher" jdbcType="LONGVARBINARY" />
    <result column="x509_issuer" property="x509Issuer" jdbcType="LONGVARBINARY" />
    <result column="x509_subject" property="x509Subject" jdbcType="LONGVARBINARY" />
    <result column="authentication_string" property="authenticationString" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Host, User, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, Drop_priv, 
    Reload_priv, Shutdown_priv, Process_priv, File_priv, Grant_priv, References_priv, 
    Index_priv, Alter_priv, Show_db_priv, Super_priv, Create_tmp_table_priv, Lock_tables_priv, 
    Execute_priv, Repl_slave_priv, Repl_client_priv, Create_view_priv, Show_view_priv, 
    Create_routine_priv, Alter_routine_priv, Create_user_priv, Event_priv, Trigger_priv, 
    Create_tablespace_priv, ssl_type, max_questions, max_updates, max_connections, max_user_connections, 
    plugin, password_expired, password_last_changed, password_lifetime, account_locked
  </sql>
  <sql id="Blob_Column_List" >
    ssl_cipher, x509_issuer, x509_subject, authentication_string
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.fzu.pa.dao.domain.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fzu.pa.dao.domain.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.fzu.pa.dao.domain.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fzu.pa.dao.domain.UserDO" >
    insert into user (Host, User, Select_priv, Insert_priv, Update_priv, Delete_priv, 
      Create_priv, Drop_priv, Reload_priv, Shutdown_priv, Process_priv, File_priv, 
      Grant_priv, References_priv, Index_priv, Alter_priv, Show_db_priv, Super_priv, 
      Create_tmp_table_priv, Lock_tables_priv, Execute_priv, Repl_slave_priv, Repl_client_priv, 
      Create_view_priv, Show_view_priv, Create_routine_priv, Alter_routine_priv, 
      Create_user_priv, Event_priv, Trigger_priv, Create_tablespace_priv, ssl_type, 
      max_questions, max_updates, max_connections, max_user_connections, plugin, 
      password_expired, password_last_changed, password_lifetime, account_locked, 
      ssl_cipher, x509_issuer, x509_subject, authentication_string)
    values (#{host}, #{user}, #{selectPriv}, #{insertPriv}, #{updatePriv}, #{deletePriv}, 
      #{createPriv}, #{dropPriv}, #{reloadPriv}, #{shutdownPriv}, #{processPriv}, #{filePriv}, 
      #{grantPriv}, #{referencesPriv}, #{indexPriv}, #{alterPriv}, #{showDbPriv}, #{superPriv}, 
      #{createTmpTablePriv}, #{lockTablesPriv}, #{executePriv}, #{replSlavePriv}, #{replClientPriv}, 
      #{createViewPriv}, #{showViewPriv}, #{createRoutinePriv}, #{alterRoutinePriv}, 
      #{createUserPriv}, #{eventPriv}, #{triggerPriv}, #{createTablespacePriv}, #{sslType}, 
      #{maxQuestions}, #{maxUpdates}, #{maxConnections}, #{maxUserConnections}, #{plugin}, 
      #{passwordExpired}, #{passwordLastChanged}, #{passwordLifetime}, #{accountLocked}, 
      #{sslCipher}, #{x509Issuer}, #{x509Subject}, #{authenticationString})
  </insert>
  <insert id="insertSelective" parameterType="com.fzu.pa.dao.domain.UserDO" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="host != null" >
        Host,
      </if>
      <if test="user != null" >
        User,
      </if>
      <if test="selectPriv != null" >
        Select_priv,
      </if>
      <if test="insertPriv != null" >
        Insert_priv,
      </if>
      <if test="updatePriv != null" >
        Update_priv,
      </if>
      <if test="deletePriv != null" >
        Delete_priv,
      </if>
      <if test="createPriv != null" >
        Create_priv,
      </if>
      <if test="dropPriv != null" >
        Drop_priv,
      </if>
      <if test="reloadPriv != null" >
        Reload_priv,
      </if>
      <if test="shutdownPriv != null" >
        Shutdown_priv,
      </if>
      <if test="processPriv != null" >
        Process_priv,
      </if>
      <if test="filePriv != null" >
        File_priv,
      </if>
      <if test="grantPriv != null" >
        Grant_priv,
      </if>
      <if test="referencesPriv != null" >
        References_priv,
      </if>
      <if test="indexPriv != null" >
        Index_priv,
      </if>
      <if test="alterPriv != null" >
        Alter_priv,
      </if>
      <if test="showDbPriv != null" >
        Show_db_priv,
      </if>
      <if test="superPriv != null" >
        Super_priv,
      </if>
      <if test="createTmpTablePriv != null" >
        Create_tmp_table_priv,
      </if>
      <if test="lockTablesPriv != null" >
        Lock_tables_priv,
      </if>
      <if test="executePriv != null" >
        Execute_priv,
      </if>
      <if test="replSlavePriv != null" >
        Repl_slave_priv,
      </if>
      <if test="replClientPriv != null" >
        Repl_client_priv,
      </if>
      <if test="createViewPriv != null" >
        Create_view_priv,
      </if>
      <if test="showViewPriv != null" >
        Show_view_priv,
      </if>
      <if test="createRoutinePriv != null" >
        Create_routine_priv,
      </if>
      <if test="alterRoutinePriv != null" >
        Alter_routine_priv,
      </if>
      <if test="createUserPriv != null" >
        Create_user_priv,
      </if>
      <if test="eventPriv != null" >
        Event_priv,
      </if>
      <if test="triggerPriv != null" >
        Trigger_priv,
      </if>
      <if test="createTablespacePriv != null" >
        Create_tablespace_priv,
      </if>
      <if test="sslType != null" >
        ssl_type,
      </if>
      <if test="maxQuestions != null" >
        max_questions,
      </if>
      <if test="maxUpdates != null" >
        max_updates,
      </if>
      <if test="maxConnections != null" >
        max_connections,
      </if>
      <if test="maxUserConnections != null" >
        max_user_connections,
      </if>
      <if test="plugin != null" >
        plugin,
      </if>
      <if test="passwordExpired != null" >
        password_expired,
      </if>
      <if test="passwordLastChanged != null" >
        password_last_changed,
      </if>
      <if test="passwordLifetime != null" >
        password_lifetime,
      </if>
      <if test="accountLocked != null" >
        account_locked,
      </if>
      <if test="sslCipher != null" >
        ssl_cipher,
      </if>
      <if test="x509Issuer != null" >
        x509_issuer,
      </if>
      <if test="x509Subject != null" >
        x509_subject,
      </if>
      <if test="authenticationString != null" >
        authentication_string,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="host != null" >
        #{host},
      </if>
      <if test="user != null" >
        #{user},
      </if>
      <if test="selectPriv != null" >
        #{selectPriv},
      </if>
      <if test="insertPriv != null" >
        #{insertPriv},
      </if>
      <if test="updatePriv != null" >
        #{updatePriv},
      </if>
      <if test="deletePriv != null" >
        #{deletePriv},
      </if>
      <if test="createPriv != null" >
        #{createPriv},
      </if>
      <if test="dropPriv != null" >
        #{dropPriv},
      </if>
      <if test="reloadPriv != null" >
        #{reloadPriv},
      </if>
      <if test="shutdownPriv != null" >
        #{shutdownPriv},
      </if>
      <if test="processPriv != null" >
        #{processPriv},
      </if>
      <if test="filePriv != null" >
        #{filePriv},
      </if>
      <if test="grantPriv != null" >
        #{grantPriv},
      </if>
      <if test="referencesPriv != null" >
        #{referencesPriv},
      </if>
      <if test="indexPriv != null" >
        #{indexPriv},
      </if>
      <if test="alterPriv != null" >
        #{alterPriv},
      </if>
      <if test="showDbPriv != null" >
        #{showDbPriv},
      </if>
      <if test="superPriv != null" >
        #{superPriv},
      </if>
      <if test="createTmpTablePriv != null" >
        #{createTmpTablePriv},
      </if>
      <if test="lockTablesPriv != null" >
        #{lockTablesPriv},
      </if>
      <if test="executePriv != null" >
        #{executePriv},
      </if>
      <if test="replSlavePriv != null" >
        #{replSlavePriv},
      </if>
      <if test="replClientPriv != null" >
        #{replClientPriv},
      </if>
      <if test="createViewPriv != null" >
        #{createViewPriv},
      </if>
      <if test="showViewPriv != null" >
        #{showViewPriv},
      </if>
      <if test="createRoutinePriv != null" >
        #{createRoutinePriv},
      </if>
      <if test="alterRoutinePriv != null" >
        #{alterRoutinePriv},
      </if>
      <if test="createUserPriv != null" >
        #{createUserPriv},
      </if>
      <if test="eventPriv != null" >
        #{eventPriv},
      </if>
      <if test="triggerPriv != null" >
        #{triggerPriv},
      </if>
      <if test="createTablespacePriv != null" >
        #{createTablespacePriv},
      </if>
      <if test="sslType != null" >
        #{sslType},
      </if>
      <if test="maxQuestions != null" >
        #{maxQuestions},
      </if>
      <if test="maxUpdates != null" >
        #{maxUpdates},
      </if>
      <if test="maxConnections != null" >
        #{maxConnections},
      </if>
      <if test="maxUserConnections != null" >
        #{maxUserConnections},
      </if>
      <if test="plugin != null" >
        #{plugin},
      </if>
      <if test="passwordExpired != null" >
        #{passwordExpired},
      </if>
      <if test="passwordLastChanged != null" >
        #{passwordLastChanged},
      </if>
      <if test="passwordLifetime != null" >
        #{passwordLifetime},
      </if>
      <if test="accountLocked != null" >
        #{accountLocked},
      </if>
      <if test="sslCipher != null" >
        #{sslCipher},
      </if>
      <if test="x509Issuer != null" >
        #{x509Issuer},
      </if>
      <if test="x509Subject != null" >
        #{x509Subject},
      </if>
      <if test="authenticationString != null" >
        #{authenticationString},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fzu.pa.dao.domain.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.host != null" >
        Host = #{record.host},
      </if>
      <if test="record.user != null" >
        User = #{record.user},
      </if>
      <if test="record.selectPriv != null" >
        Select_priv = #{record.selectPriv},
      </if>
      <if test="record.insertPriv != null" >
        Insert_priv = #{record.insertPriv},
      </if>
      <if test="record.updatePriv != null" >
        Update_priv = #{record.updatePriv},
      </if>
      <if test="record.deletePriv != null" >
        Delete_priv = #{record.deletePriv},
      </if>
      <if test="record.createPriv != null" >
        Create_priv = #{record.createPriv},
      </if>
      <if test="record.dropPriv != null" >
        Drop_priv = #{record.dropPriv},
      </if>
      <if test="record.reloadPriv != null" >
        Reload_priv = #{record.reloadPriv},
      </if>
      <if test="record.shutdownPriv != null" >
        Shutdown_priv = #{record.shutdownPriv},
      </if>
      <if test="record.processPriv != null" >
        Process_priv = #{record.processPriv},
      </if>
      <if test="record.filePriv != null" >
        File_priv = #{record.filePriv},
      </if>
      <if test="record.grantPriv != null" >
        Grant_priv = #{record.grantPriv},
      </if>
      <if test="record.referencesPriv != null" >
        References_priv = #{record.referencesPriv},
      </if>
      <if test="record.indexPriv != null" >
        Index_priv = #{record.indexPriv},
      </if>
      <if test="record.alterPriv != null" >
        Alter_priv = #{record.alterPriv},
      </if>
      <if test="record.showDbPriv != null" >
        Show_db_priv = #{record.showDbPriv},
      </if>
      <if test="record.superPriv != null" >
        Super_priv = #{record.superPriv},
      </if>
      <if test="record.createTmpTablePriv != null" >
        Create_tmp_table_priv = #{record.createTmpTablePriv},
      </if>
      <if test="record.lockTablesPriv != null" >
        Lock_tables_priv = #{record.lockTablesPriv},
      </if>
      <if test="record.executePriv != null" >
        Execute_priv = #{record.executePriv},
      </if>
      <if test="record.replSlavePriv != null" >
        Repl_slave_priv = #{record.replSlavePriv},
      </if>
      <if test="record.replClientPriv != null" >
        Repl_client_priv = #{record.replClientPriv},
      </if>
      <if test="record.createViewPriv != null" >
        Create_view_priv = #{record.createViewPriv},
      </if>
      <if test="record.showViewPriv != null" >
        Show_view_priv = #{record.showViewPriv},
      </if>
      <if test="record.createRoutinePriv != null" >
        Create_routine_priv = #{record.createRoutinePriv},
      </if>
      <if test="record.alterRoutinePriv != null" >
        Alter_routine_priv = #{record.alterRoutinePriv},
      </if>
      <if test="record.createUserPriv != null" >
        Create_user_priv = #{record.createUserPriv},
      </if>
      <if test="record.eventPriv != null" >
        Event_priv = #{record.eventPriv},
      </if>
      <if test="record.triggerPriv != null" >
        Trigger_priv = #{record.triggerPriv},
      </if>
      <if test="record.createTablespacePriv != null" >
        Create_tablespace_priv = #{record.createTablespacePriv},
      </if>
      <if test="record.sslType != null" >
        ssl_type = #{record.sslType},
      </if>
      <if test="record.maxQuestions != null" >
        max_questions = #{record.maxQuestions},
      </if>
      <if test="record.maxUpdates != null" >
        max_updates = #{record.maxUpdates},
      </if>
      <if test="record.maxConnections != null" >
        max_connections = #{record.maxConnections},
      </if>
      <if test="record.maxUserConnections != null" >
        max_user_connections = #{record.maxUserConnections},
      </if>
      <if test="record.plugin != null" >
        plugin = #{record.plugin},
      </if>
      <if test="record.passwordExpired != null" >
        password_expired = #{record.passwordExpired},
      </if>
      <if test="record.passwordLastChanged != null" >
        password_last_changed = #{record.passwordLastChanged},
      </if>
      <if test="record.passwordLifetime != null" >
        password_lifetime = #{record.passwordLifetime},
      </if>
      <if test="record.accountLocked != null" >
        account_locked = #{record.accountLocked},
      </if>
      <if test="record.sslCipher != null" >
        ssl_cipher = #{record.sslCipher},
      </if>
      <if test="record.x509Issuer != null" >
        x509_issuer = #{record.x509Issuer},
      </if>
      <if test="record.x509Subject != null" >
        x509_subject = #{record.x509Subject},
      </if>
      <if test="record.authenticationString != null" >
        authentication_string = #{record.authenticationString},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update user
    set Host = #{record.host},
      User = #{record.user},
      Select_priv = #{record.selectPriv},
      Insert_priv = #{record.insertPriv},
      Update_priv = #{record.updatePriv},
      Delete_priv = #{record.deletePriv},
      Create_priv = #{record.createPriv},
      Drop_priv = #{record.dropPriv},
      Reload_priv = #{record.reloadPriv},
      Shutdown_priv = #{record.shutdownPriv},
      Process_priv = #{record.processPriv},
      File_priv = #{record.filePriv},
      Grant_priv = #{record.grantPriv},
      References_priv = #{record.referencesPriv},
      Index_priv = #{record.indexPriv},
      Alter_priv = #{record.alterPriv},
      Show_db_priv = #{record.showDbPriv},
      Super_priv = #{record.superPriv},
      Create_tmp_table_priv = #{record.createTmpTablePriv},
      Lock_tables_priv = #{record.lockTablesPriv},
      Execute_priv = #{record.executePriv},
      Repl_slave_priv = #{record.replSlavePriv},
      Repl_client_priv = #{record.replClientPriv},
      Create_view_priv = #{record.createViewPriv},
      Show_view_priv = #{record.showViewPriv},
      Create_routine_priv = #{record.createRoutinePriv},
      Alter_routine_priv = #{record.alterRoutinePriv},
      Create_user_priv = #{record.createUserPriv},
      Event_priv = #{record.eventPriv},
      Trigger_priv = #{record.triggerPriv},
      Create_tablespace_priv = #{record.createTablespacePriv},
      ssl_type = #{record.sslType},
      max_questions = #{record.maxQuestions},
      max_updates = #{record.maxUpdates},
      max_connections = #{record.maxConnections},
      max_user_connections = #{record.maxUserConnections},
      plugin = #{record.plugin},
      password_expired = #{record.passwordExpired},
      password_last_changed = #{record.passwordLastChanged},
      password_lifetime = #{record.passwordLifetime},
      account_locked = #{record.accountLocked},
      ssl_cipher = #{record.sslCipher},
      x509_issuer = #{record.x509Issuer},
      x509_subject = #{record.x509Subject},
      authentication_string = #{record.authenticationString}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set Host = #{record.host},
      User = #{record.user},
      Select_priv = #{record.selectPriv},
      Insert_priv = #{record.insertPriv},
      Update_priv = #{record.updatePriv},
      Delete_priv = #{record.deletePriv},
      Create_priv = #{record.createPriv},
      Drop_priv = #{record.dropPriv},
      Reload_priv = #{record.reloadPriv},
      Shutdown_priv = #{record.shutdownPriv},
      Process_priv = #{record.processPriv},
      File_priv = #{record.filePriv},
      Grant_priv = #{record.grantPriv},
      References_priv = #{record.referencesPriv},
      Index_priv = #{record.indexPriv},
      Alter_priv = #{record.alterPriv},
      Show_db_priv = #{record.showDbPriv},
      Super_priv = #{record.superPriv},
      Create_tmp_table_priv = #{record.createTmpTablePriv},
      Lock_tables_priv = #{record.lockTablesPriv},
      Execute_priv = #{record.executePriv},
      Repl_slave_priv = #{record.replSlavePriv},
      Repl_client_priv = #{record.replClientPriv},
      Create_view_priv = #{record.createViewPriv},
      Show_view_priv = #{record.showViewPriv},
      Create_routine_priv = #{record.createRoutinePriv},
      Alter_routine_priv = #{record.alterRoutinePriv},
      Create_user_priv = #{record.createUserPriv},
      Event_priv = #{record.eventPriv},
      Trigger_priv = #{record.triggerPriv},
      Create_tablespace_priv = #{record.createTablespacePriv},
      ssl_type = #{record.sslType},
      max_questions = #{record.maxQuestions},
      max_updates = #{record.maxUpdates},
      max_connections = #{record.maxConnections},
      max_user_connections = #{record.maxUserConnections},
      plugin = #{record.plugin},
      password_expired = #{record.passwordExpired},
      password_last_changed = #{record.passwordLastChanged},
      password_lifetime = #{record.passwordLifetime},
      account_locked = #{record.accountLocked}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>